source ~/.zplug/init.zsh

# Auto-update
zplug update

# Prompt
zplug mgee/slimline

# Zplug manage Zplug
zplug 'zplug/zplug', hook-build:'zplug --self-manage'

## Basic Bundles
zplug djui/alias-tips
zplug zsh-users/zsh-syntax-highlighting
zplug paraqles/zsh-plugin-git
zplug "plugins/common-aliases", from:oh-my-zsh
zplug "plugins/github", from:oh-my-zsh
zplug caarlos0/zsh-open-pr
zplug "plugins/adb", from:oh-my-zsh
zplug "plugins/z", from:oh-my-zsh
zplug supercrabtree/k
zplug s7anley/zsh-geeknote
zplug zsh-users/zsh-autosuggestions
zplug "plugins/history", from:oh-my-zsh
zplug "plugins/vi-mode", from:oh-my-zsh
zplug chrissicool/zsh-256color
zplug horosgrisa/autoenv
zplug zsh-users/zsh-history-substring-search
zplug zsh-users/zsh-completions
zplug "plugins/tmux", from:oh-my-zsh
zplug "plugins/tmuxinator", from:oh-my-zsh
zplug "plugins/kubectl", from:oh-my-zsh
zplug zchee/go-zsh-completions

## Ruby Bundles
zplug paraqles/zsh-plugin-ruby
zplug "plugins/rbenv", from:oh-my-zsh

zplug pelletiermaxime/test-kitchen-zsh-plugin

## OS specific plugins
if [[ $CURRENT_OS == 'OS X' ]]; then
    zplug paraqles/zsh-plugin-mac
    zplug "plugins/brew", from:oh-my-zsh
    zplug "plugins/brew-cask", from:oh-my-zsh
elif [[ $CURRENT_OS == 'Linux' ]]; then
    # None so far...

    if [[ $DISTRO == 'CentOS' ]]; then
        # None so far..
    fi
fi

# Install plugins if there are plugins that have not been installed
if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

# Then, source plugins and add commands to $PATH
zplug load --verbose

# Basic settings
export PATH="/usr/local/sbin:/usr/local/bin:/bin:/usr/sbin:/sbin:/usr/bin:$PATH"
export EDITOR='vim'
export JAVA_HOME='/usr'

# Aliases
alias apk_install="adb install -r $@"

# Shortcuts
export DOWNLOAD_HOME="$HOME/Downloads"
export APK_HOME="$DOWNLOAD_HOME/APKs"

# online help
autoload run-help
HELPDIR=/usr/local/share/zsh/help

# ATOM
export ATOM_HOME=${0%/*}/../atom

# The Fuck
#alias fuck='$(thefuck $(fc -ln -1))'

# Preserve History
HISTSIZE=5000               #How many lines of history to keep in memory
HISTFILE=~/.zsh_history     #Where to save history to disk
SAVEHIST=5000               #Number of history entries to save to disk
HISTDUP=erase               #Erase duplicates in the history file
setopt    appendhistory     #Append history to the history file (no overwriting)
setopt    sharehistory      #Share history across terminals
setopt    incappendhistory  #Immediately append to the history file, not just when a term is killed

# RbEnv init
#eval "$(rbenv init -)"
if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi
